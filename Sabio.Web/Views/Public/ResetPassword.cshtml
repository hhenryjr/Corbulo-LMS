@Model Guid
@{

    Layout = "~/Views/Shared/_simpleLayout.cshtml";
}

<link href="http://lms.dev/Content/toastr.css" rel="stylesheet" />

<!-- Login Full Background -->
<!-- For best results use an image with a resolution of 1280x1280 pixels (prefer a blurred image for smaller file size) -->
<div data-ng-controller="$resetPasswordController as reset" id="resetPasswordController" class="animation-fadeIn">
    <img id="picture" src="" alt="Login Background" class="full-bg animation-pulseSlow">
<!-- END Login Full Background -->
<!-- Login Container -->
<div id="login-container" class="animation-fadeIn">
    <!-- Login Title -->
    <div class="login-title text-center">
        <h1><strong>@Model.BrandName</strong> @Model.BrandTagline<br><small>Please enter a <strong>New Password</strong></small></h1>
    </div>
    <!-- END Login Title -->
    <!-- Login Block -->
    <div if="formContainer" class="block push-bit">
        <!-- Login Form -->
            <form data-ng-submit="reset.onResetPasswordFormValidate()" id="newPasswordForm" name="reset.resetForm" class="form-horizontal form-bordered form-control-borderless" novalidate>

            <input type="hidden" id="userName" name="userName" value="" />

            <div class="form-group">
                <div class="col-xs-12">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="gi gi-lock"></i></span>
                            <input type="password"
                                   id="newPassword"
                                   name="newPassword"
                                   data-ng-model="reset.myData.newPassword"
                                   class="form-control ng-class:{'error': reset.showResetFormErrors && !reset.resetForm.newPassword.$valid}"
                                   required
                                   ng-required="true"
                                   minlength="8"
                                   placeholder="New Password...">
                            <div role="alert" class="help-inline error-container" style="color:red" ng-show="reset.resetForm.newPassword.$dirty && reset.resetForm.newPassword.$error">
                                <span class="error has-error" ng-show="reset.showResetFormErrors && reset.resetForm.newPassword.$error.required">Please enter a new Password</span>
                                <span class="error has-error" ng-show="reset.showResetFormErrors && reset.resetForm.newPassword.$error.minlength">Your new password must be at least 8 characters long</span>
                    </div>
                </div>
            </div>
                </div>
                <div class="form-group" style="display:none">
                    <div class="input-group">
                        <input type="text"
                               id="tokenId"
                               name="tokenId"
                               data-ng-model="reset.myData.tokenId"
                               data-ng-value="reset.tokenId" />
                    </div>
                </div>
            <div class="form-group">
                <div class="col-xs-12">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="gi gi-lock"></i></span>
                            <input type="password"
                                   id="passwordVerify"
                                   name="passwordVerify"
                                   data-ng-model="reset.myData.passwordVerify"
                                   class="form-control ng-class:{'error': reset.showResetFormErrors && !reset.resetForm.passwordVerify.$valid}"
                                   required
                                   ng-required="true"
                                   pw-check="newPassword"
                                   placeholder="Verify New Password...">
                            <div role="alert" class="help-inline error" style="color:red">
                                <span class="error has-error" ng-show="reset.showResetFormErrors && reset.resetForm.passwordVerify.$error.required">Please verify your Password</span>
                                <span class="error has-error" ng-show="reset.resetForm.passwordVerify.$error.pwmatch">The password you entered doesn't match, please verify your password</span>
                            </div>
                    </div>
                </div>
            </div>
            <div class="form-group form-actions">
                <div class="col-xs-6">
                    <a href="#modal-terms" data-toggle="modal" class="password-terms">Terms</a>
                    <label class="switch switch-primary" data-toggle="tooltip" title="Agree to the terms">
                            <input type="checkbox"
                                   id="terms"
                                   name="terms"
                                   required
                                   data-ng-model="reset.myData.terms">
                        <span></span>
                    </label>
                </div>
                <div class="col-xs-6 text-right">
                    <button type="submit" id="newPassword" class="btn btn-sm btn-success"><i class="fa fa-plus"></i>Reset Password</button>
                </div>
            </div>
        </form>
        <div class="alert" id="msgWindow"></div>
        <!-- END Register Form -->
    </div>
    <!-- END Login Block -->
</div>
<!-- END Login Container -->
<!-- Modal Terms -->
<div id="modal-terms" class="modal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Terms &amp; Conditions</h4>
            </div>
            <div class="modal-body">
                <h4>Title</h4>
                <p>Donec lacinia venenatis metus at bibendum? In hac habitasse platea dictumst. Proin ac nibh rutrum lectus rhoncus eleifend. Sed porttitor pretium venenatis. Suspendisse potenti. Aliquam quis ligula elit. Aliquam at orci ac neque semper dictum. Sed tincidunt scelerisque ligula, et facilisis nulla hendrerit non. Suspendisse potenti. Pellentesque non accumsan orci. Praesent at lacinia dolor. Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
                <p>Donec lacinia venenatis metus at bibendum? In hac habitasse platea dictumst. Proin ac nibh rutrum lectus rhoncus eleifend. Sed porttitor pretium venenatis. Suspendisse potenti. Aliquam quis ligula elit. Aliquam at orci ac neque semper dictum. Sed tincidunt scelerisque ligula, et facilisis nulla hendrerit non. Suspendisse potenti. Pellentesque non accumsan orci. Praesent at lacinia dolor. Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
                <h4>Title</h4>
                <p>Donec lacinia venenatis metus at bibendum? In hac habitasse platea dictumst. Proin ac nibh rutrum lectus rhoncus eleifend. Sed porttitor pretium venenatis. Suspendisse potenti. Aliquam quis ligula elit. Aliquam at orci ac neque semper dictum. Sed tincidunt scelerisque ligula, et facilisis nulla hendrerit non. Suspendisse potenti. Pellentesque non accumsan orci. Praesent at lacinia dolor. Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
                <p>Donec lacinia venenatis metus at bibendum? In hac habitasse platea dictumst. Proin ac nibh rutrum lectus rhoncus eleifend. Sed porttitor pretium venenatis. Suspendisse potenti. Aliquam quis ligula elit. Aliquam at orci ac neque semper dictum. Sed tincidunt scelerisque ligula, et facilisis nulla hendrerit non. Suspendisse potenti. Pellentesque non accumsan orci. Praesent at lacinia dolor. Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
                <h4>Title</h4>
                <p>Donec lacinia venenatis metus at bibendum? In hac habitasse platea dictumst. Proin ac nibh rutrum lectus rhoncus eleifend. Sed porttitor pretium venenatis. Suspendisse potenti. Aliquam quis ligula elit. Aliquam at orci ac neque semper dictum. Sed tincidunt scelerisque ligula, et facilisis nulla hendrerit non. Suspendisse potenti. Pellentesque non accumsan orci. Praesent at lacinia dolor. Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
                <p>Donec lacinia venenatis metus at bibendum? In hac habitasse platea dictumst. Proin ac nibh rutrum lectus rhoncus eleifend. Sed porttitor pretium venenatis. Suspendisse potenti. Aliquam quis ligula elit. Aliquam at orci ac neque semper dictum. Sed tincidunt scelerisque ligula, et facilisis nulla hendrerit non. Suspendisse potenti. Pellentesque non accumsan orci. Praesent at lacinia dolor. Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
            </div>
        </div>
    </div>
</div>
</div>

@section Scripts{
    <script src="~/Scripts/sabio.services.forgotPassword.js"></script>

    <!-- Load and execute javascript code used only in this page -->

    <script src="~/Scripts/app/services/alertService.js"></script>
    <script src="/Scripts/toastr.js"></script>
    <script src="/Scripts/sabio.services.usertokens.js"></script>
    <script src="/Scripts/sabio.services.login.js"></script>
    <script scr="~/Scripts/sabio.services.messages.js"></script>
    <script src="/Scripts/jquery.validate.js"></script>
    <script type="text/javascript"></script>
    <script>
        //sabio.page.startUp = function () {

        //    sabio.page.userController = sabio.ng.getControllerInstance($("#resetPasswordController"));
        //}

        sabio.services.resetPasswordFactory = function ($baseService) {
            var aSabioServiceObject = sabio.services.login;
            var newService = $baseService.merge(true, {}, aSabioServiceObject, $baseService);
            return newService;
        }

        sabio.page.resetPasswordControllerFactory = function (
            $scope
            , $baseController
            , $resetPasswordService
            , $alertService) {

            var vm = this; //this points to a new {}

            //-- this line to simulate inheritance
            $baseController.merge(vm, $baseController);

            //vm.user = null;

            vm.$scope = $scope;
            vm.$resetPasswordService = $resetPasswordService;
            vm.$alertService = $alertService;

            vm.tokenId = '@Model';
            vm.settings = _settings;

            vm.cycleThruBackgroundPic = _cycleThruBackgroundPic;
            vm.thisBackGroundPic = _thisBackGroundPic;

            vm.onResetPasswordFormValidate = _onResetPasswordFormValidate;
            vm.onResetPasswordFormSubmit = _onResetPasswordFormSubmit;

            vm.onSendResetPasswordRequestSuccess = _onSendResetPasswordRequestSuccess;
            vm.onSendResetPasswordRequestError = _onSendResetPasswordRequestError;



            //this is a wrapper for our small dependency on $scope
            vm.notify = vm.$resetPasswordService.getNotifier($scope);

            render();

            function render() {
                vm.settings();
                vm.cycleThruBackgroundPic();
                    }

            function _cycleThruBackgroundPic() {
            var randomNumber = (Math.random()) * 10;
            var Number = Math.floor(randomNumber) + 1;
            var src;
            switch (Number) {
                case 1:
                case 2:
                    src = "http://sabio.la/images/hacks/IMG_6094.JPG";
                    break;
                case 3:
                case 4:
                    src = "http://sabio.la/images/hacks/img19.jpg";
                    break;
                case 5:
                case 6:
                    src = "http://sabio.la/images/hacks/IMG_6021.JPG";
                    break;
                case 7:
                case 8:
                    src = "http://sabio.la/images/hacks/women.JPG";
                    break;
                case 9:
                case 10:
                    src = "http://sabio.la/images/hacks/IMG_6057.JPG";
                    break;
            }


                vm.thisBackGroundPic(src);
        }

            function _thisBackGroundPic(pic) {
                angular.element("#picture").attr("src", pic);
        }

            function _onResetPasswordFormValidate() {
                vm.showResetFormErrors = true;
                //var form = $("")
                if (vm.resetForm.$valid) {

                    vm.onResetPasswordFormSubmit();
            } else {
                    console.error('The form is invalid');
            }
        }

            function _onResetPasswordFormSubmit() {
                vm.myData.tokenId = vm.tokenId;
                vm.$resetPasswordService.reset(vm.myData, _onSendResetPasswordRequestSuccess, _onSendResetPasswordRequestError)

        }

            function _onSendResetPasswordRequestSuccess(data, status, xhr) {
                vm.$alertService.onSuccess('You have successfully reset your password. Please return to the login screen...')
            }

            function _onSendResetPasswordRequestError(jqXHR, textStatus, errorThrown) {
                vm.$alertService.onError('A ' + errorThrown + ' error has occured, please try again...')
            }

            function _settings() {
                vm.data = {};
                vm.showResetFormErrors = false;
        }
        }
        //This is the break in jQuery-----------------------------------------------------------------
        sabio.ng.app.module.directive('pwCheck', [function () {
            return {
                require: 'ngModel',
                link: function (scope, elem, attrs, ctrl) {
                    var firstPassword = '#' + attrs.pwCheck;
                    elem.add(firstPassword).on('keyup', function () {
                        scope.$apply(function () {
                            var v = elem.val() === $(firstPassword).val();
                            ctrl.$setValidity('pwmatch', v);
                        });
                    });
        }
        }
        }]);

        sabio.ng.app.module.directive('checkRequired', function () {
            return {
                require: 'ngModel',
                restrict: 'A',
                link: function (scope, element, attrs, ngModel) {
                    ngModel.$validators.checkRequired = function (modelValue, viewValue) {
                        var value = modelValue || viewValue;
                        var match = scope.$eval(attrs.ngTrueValue) || true;
                        return value && match === value;
            };
        }
            };
        });

        sabio.ng.addService(sabio.ng.app.module
          , "$resetPasswordService"
          , ["$baseService"]
          , sabio.services.resetPasswordFactory);

        sabio.ng.addController(sabio.ng.app.module
            , "$resetPasswordController"
            , ['$scope', '$baseController', "$resetPasswordService", "$alertService"]
            , sabio.page.resetPasswordControllerFactory);
    </script>
}
