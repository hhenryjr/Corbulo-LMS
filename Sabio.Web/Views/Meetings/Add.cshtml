@model Sabio.Web.Models.ViewModels.ItemViewModel<int>
@{
    ViewBag.Title = "Meeting";
}
<div class="content-header">
    <div class="header-section">
        <h1>
            <i class="gi gi-cogwheels"></i>
            Meetings
            <br  />
            <small>Upcoming and past meetings</small>
        </h1>
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        <!-- Basic Form Elements Block -->
        <div class="block">
            <!-- Basic Form Elements Title -->
            <div class="block-title">
                <!--<div class="block-options pull-right">
                    <a href="javascript:void(0)" class="btn btn-alt btn-sm btn-default toggle-bordered enable-tooltip" data-toggle="button" title="Toggles .form-bordered class">No Borders</a>
                </div>
                    -->
                <h2><strong>Enter/Edit Meeting Information</strong></h2>
            </div>
            <!-- END Form Elements Title -->
            <!-- Basic Form Elements Content -->
            <form id="entryForm" action="page_forms_general.html" method="post" enctype="multipart/form-data" class="form-horizontal" >
                <input type="text" id="id" name="id" class="form-control hidden" placeholder="Id" value="@Model.Item">
                <div class="form-group">
                    <label class="col-md-3 control-label" for="name">Meeting Name</label>
                    <div class="col-md-9 errorContainer">
                        <input type="text" id="name" name="name" class="form-control" placeholder="Meeting Name">
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 control-label" for="date">Date</label>
                    <div class="col-md-9 errorContainer">
                        <input type="text" id="date" name="date" class="form-control input-datepicker" data-date-format="mm/dd/yyyy" placeholder="mm/dd/yyyy">
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 control-label" for="startTime">Start Time</label>
                    <div class="col-md-9 errorContainer">
                        <div class="input-group bootstrap-timepicker timepicker">
                            <input type="text" id="startTime" name="startTime" value="7:00 PM" class="form-control input-timepicker">
                            <span class="input-group-btn">
                                <a href="javascript:void(0)" class="btn btn-primary"><i class="fa fa-clock-o"></i></a>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 control-label" for="endTime">End Time</label>
                    <div class="col-md-9 errorContainer">
                        <div class="input-group bootstrap-timepicker timepicker">
                            <input type="text" id="endTime" name="endTime" value="9:30 PM" class="form-control  input-timepicker">
                            <span class="input-group-btn">
                                <a href="javascript:void(0)" class="btn btn-primary"><i class="fa fa-clock-o"></i></a>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 control-label" for="description">Description</label>
                    <div class="col-md-9 errorContainer">
                        <textarea id="description" name="description" rows="9" class="form-control" placeholder="Description"></textarea>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 control-label" for="meetingTypeId">Type</label>
                    <div class="col-md-9 errorContainer">
                        <select id="meetingTypeId" name="meetingTypeId" class="form-control" size="1">
                            <option value="0">(Select a meeting type)</option>
                            <option value="1">Lesson</option>
                            <option value="2">Meet Up</option>
                            <option value="3">Hackathon</option>
                            <option value="4">Appointment</option>
                            <option value="5">Celebration</option>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 control-label" for="meetingLeaderPersonIds">Leader(s)</label>
                    <div class="col-md-9 errorContainer">
                        <select id="meetingLeaderPersonIds" name="meetingLeaderPersonIds" class="form-control" size="5" multiple>
                            <option value="1">Liliana</option>
                            <option value="2">Gregorio</option>
                            <option value="3">Aaron</option>
                            <option value="4">Gus</option>
                            <option value="5">John</option>
                            <option value="6">Jimmy</option>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 control-label">Format</label>
                    <div class="col-md-9 errorContainer">
                        <div class="radio">
                            <label for="meeting-format-online">
                                <input type="radio" id="meeting-format-online" name="meetingFormatId" value="1"> On-Line
                            </label>
                        </div>
                        <div class="radio">
                            <label for="meeting-format-physical">
                                <input type="radio" id="meeting-format-physical" name="meetingFormatId" value="2"> Physical
                            </label>
                        </div>
                        <div class="radio">
                            <label for="meeting-format-teleconference">
                                <input type="radio" id="meeting-format-teleconference" name="meetingFormatId" value="3"> Teleconference
                            </label>
                        </div>
                        <label for="meetingFormatIds" class="error" style="display:none;">Please choose one.</label>
                    </div>

                </div>
                <div class="form-group">
                    <label class="col-md-3 control-label">Inline Checkboxes</label>
                    <div class="col-md-9">
                        <label class="checkbox-inline" for="tentative">
                            <input type="checkbox" id="tentative" name="tentative" value="true"> Tentative
                        </label>
                        <label class="checkbox-inline" for="public">
                            <input type="checkbox" id="public" name="public" value="true"> Public
                        </label>
                    </div>
                </div>
                <div class="form-group form-actions">
                    <div class="col-md-9 col-md-offset-3">
                        <button type="button" id="cmdSubmit" class="btn btn-sm btn-primary"><i class="fa fa-angle-right"></i> Submit</button>
                        <button type="reset" class="btn btn-sm btn-warning"><i class="fa fa-repeat"></i> Reset</button>
                    </div>
                </div>
            </form>
            <!-- END Basic Form Elements Content -->
        </div>
        <!-- END Basic Form Elements Block -->
    </div>
</div>
@section scripts
{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/sabio.services.meetings.js"></script>
    <script src="~/js/pages/formsGeneral.js"></script>
    <script>$(function () { FormsGeneral.init(); });</script>
    <script src="~/Scripts/moment.js"></script>
    <script type="text/javascript">
        sabio.page.startUp = function () {
            // Bootstrap Timepicker http://jdewit.github.io/bootstrap-timepicker/
            // included by plugins from bootstrap template
            $('#startTime').timepicker('setTime', '7:00 PM');
            $('#endTime').timepicker('setTime', '9:30 PM');
            sabio.page.initializeValidation();

            $("#cmdSubmit").on("click", sabio.page.handlers.onSubmit);

            var id = $("#id").val();
            if (id > 0) {
                sabio.services.meetings.getById(id,
                    sabio.page.onGetSuccess, sabio.page.onAjaxError);
            }
        };

        sabio.page.initializeValidation = function () {

            //  set defaults for the entire plugin
            jQuery.validator.setDefaults({
                debug: true
            });

            //  set rules and error messages
            $('#entryForm').validate(
                {
                    errorClass: 'help-block animation-slideDown', // You can change the animation class for a different entrance animation - check animations page
                    errorElement: 'div',
                    errorPlacement: function (error, e) {
                        e.parents('.errorContainer').append(error);
                    },
                    highlight: function (e) {
                        $(e).closest('.form-group').removeClass('has-success has-error').addClass('has-error');
                        $(e).closest('.help-block').remove();
                    },
                    success: function (e) {
                        // You can use the following if you would like to highlight with green color the input after successful validation!
                        e.closest('.form-group').removeClass('has-success has-error'); // e.closest('.form-group').removeClass('has-success has-error').addClass('has-success');
                        e.closest('.help-block').remove();
                    },
                    rules: {
                        "name": {
                            required: true,
                            minlength: 3,
                            maxlength: 50
                        },
                        "description": {
                            maxlength: 250
                        },
                        "date": {
                            required: true
                        },
                        "startTime": {
                            required: true,
                        },
                        "endTime": {
                            required: true,
                        },
                        "meetingTypeId": {
                            required: true,
                            min: 1
                        },
                        //"meetingLeaderPersonIds": {
                        //    required: true
                        //},
                        "meetingFormatId": {
                            required: true
                        }
                    },
                    //  here you can provide custom error messages if you want to - this part is optional
                    messages: {
                        "name": {
                            required: "Meeting name is required.",
                            minlength: "Meeting must be at least 3 characters long.",
                            maxlength: "Meeting name cannot be more than 50 characters long."
                        },
                        "description": {
                            maxlength: "Meeting description cannot be more than 250 characters long."
                        },
                        "date": {
                            required: "Date is required."
                        },
                        'startTime': {
                            required: "Start time is required."
                        },
                        'endTime': {
                            required: "End time is required."
                        },
                        "meetingTypeId": {
                            required: "Meeting Type is required.",
                            min: "Meeting type is  required."
                        },
                        //"meetingLeaderPersonIds": {
                        //    required: "Take me to your leader(s)"
                        //},
                        "meetingFormatId": {
                            required: "Meeting format is required"
                        }
                    }
                });
        };

        sabio.page.handlers.onSubmit = function () {
            $('#msgWindow').text('');

            if (!$('#entryForm').valid()) {
                return;
            }

            var formData = $("#entryForm").serialize();
            console.log($('#entryForm').serialize())
            if ($('#id').val() > 0) {
                sabio.services.meetings.update(formData,
                    sabio.page.onPutSuccess, sabio.page.onAjaxError);
            }
            else {
                sabio.services.meetings.add(formData,
                    sabio.page.onPostSuccess, sabio.page.onAjaxError);
            }
        };

        sabio.page.onPostSuccess = function (data, status, xhr) {
            $("#id").val(data.item);
        }

        sabio.page.onPutSuccess = function (data, status, xhr) {
            // Nothing to do ?
        };

        sabio.page.onGetSuccess = function (data, status, xhr) {
            var frm = $('#entryForm');
            frm.find('#name').val(data.item.name);
            frm.find('#description').val(data.item.description);
            var meetingDate = data.item.date;
            // JSON format for date is e.g. 2015-07-12T21:34:23-07:00
            // Need to convert to MM/dd/yyyy for display
            frm.find('#date').val(moment(data.item.date).format('L'));
            frm.find('#startTime').val(data.item.startTime);
            frm.find('#endTime').val(data.item.endTime);
            frm.find('#meetingTypeId').val(data.item.meetingTypeId);
            sabio.page.radioButtonSetVal('meetingFormatId', data.item.meetingFormatId);
            //frm.find('#meetingFormatId').val(data.item.meetingFormatId);

            frm.find('#tentative').prop('checked', data.item.tentative);
            frm.find('#public').prop('checked', data.item.public);
        };

        sabio.page.onAjaxError = function (jqXHR, textStatus, errorThrown) {
            window.alert(JSON.stringify(jqXHR.responseJSON));
        };

        sabio.page.radioButtonSetVal = function (name, selectedValue) {
            $('input[name="' + name + '"][value="' + selectedValue + '"]')
            .prop('checked', true);
        };
    </script>
}






